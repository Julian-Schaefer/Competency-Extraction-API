openapi: "3.0.0"
info:
  description: "This is our AWT project server. You can query competencies and courses here."
  version: "1.0.0"
  title: "Competency Extraction"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
- name: Competencies
  description: Add and query competencies
  externalDocs:
    description: EU ESCO
    url: "https://esco.ec.europa.eu/en/classification/skill?uri=http%3A%2F%2Fdata.europa.eu%2Fesco%2Fskill%2FA1.1.0"
- name: Courses
  description: Add and query courses
paths:
  /courses:
    post:
      tags:
      - Courses
      summary: Add a new course
      description: Add a new course
      operationId: addCourse
      parameters:
      - in: query
        name: extractor
        description: Type of Competency Extractor to use
        required: false
        schema:
          type: string
          enum:
            - paper
            - ml
      responses:
        '400':
          description: Invalid input
        '200':
          description: Course was added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseAddedSuccess'
      requestBody:
        description: Add a new course
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseBody'
    get:
      tags:
      - Courses
      summary: Query for courses
      description: Query for courses
      operationId: retrieveCourses
      parameters:
      - in: query
        name: competencyId
        description: Filter courses by competency (optional)
        required: false
        schema:
          type: integer
      responses:
        '400':
          description: Invalid input
        '200':
          description: Query result for courses.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
  /competencies/initialize:
    post:
      tags:
      - Competencies
      summary: Initialize the database with EU-ESCO competencies
      description: Initialize the database with EU-ESCO competencies
      operationId: initialize
      responses:
        '200':
          description: Database and Store have been initialized successfully!
  /competencies:
    get:
      tags:
      - Competencies
      summary: Query for competencies
      description: Query for competencies
      operationId: retrieveCompetencies
      parameters:
      - in: query
        name: courseId
        description: Filter competencies by course
        required: false
        schema:
          type: integer
      responses:
        '400':
          description: Invalid input
        '200':
          description: Query result for competencies.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competency'
components:
  schemas:
    CourseAddedSuccess:
      properties:
        course:
          $ref: '#/components/schemas/Course'
        competencies:
          type: array
          items:
            $ref: '#/components/schemas/Competency'
    Course:
      properties:
        id:
          type: integer
        description:
          type: string
    CourseBody:
      properties:
        courseDescription:
          type: string
    Competency:
      properties:
        id:
          type: integer
        competencyType:
          type: string
        conceptType:
          type: string
        conceptUri:
          type: string
        description:
          type: string
